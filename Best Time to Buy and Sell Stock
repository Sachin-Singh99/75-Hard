// BruteForce Approach

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int profit = 0;
        int n = prices.size();
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(prices[j]-prices[i]>profit){
                    profit = prices[j]-prices[i];
                }
            }
        }
        return profit;
    }
};



// Optimal Approach

class Solution {
public:
    int maxProfit(vector<int>& prices){
        int mn=prices[0],mx=0;
        int n = prices.size();
        for(int i=1;i<n;i++){
            mn=min(mn,prices[i]);
            mx=max(mx,prices[i]-mn);
        }
        return mx;
    }
};
